{
    "tests.test_crypto.TestCRL.test_dump_crl": {
        "False Negatives": [],
        "False Positives": [],
        "True Positives": [
            "src.OpenSSL.crypto.dump_crl"
        ]
    },
    "tests.test_crypto.TestCRL.test_export_md5_digest": {
        "False Negatives": [
            "src.OpenSSL.crypto.CRL.export"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_crypto.TestFunction.test_load_privatekey_passphrase_wrong_return_type": {
        "False Negatives": [
            "src.OpenSSL.crypto.load_privatekey"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_crypto.TestFunction.test_load_privatekey_wrongPassphrase": {
        "False Negatives": [
            "src.OpenSSL.crypto.load_privatekey"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_crypto.TestPKey.test_check_pr_897": {
        "False Negatives": [
            "src.OpenSSL.crypto.PKey.check",
            "src.OpenSSL.crypto.load_privatekey"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_crypto.TestPKey.test_pregeneration": {
        "False Negatives": [
            "src.OpenSSL.crypto.PKey.type",
            "src.OpenSSL.crypto.PKey.check",
            "src.OpenSSL.crypto.PKey.bits"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_crypto.TestRevoked.test_reason": {
        "False Negatives": [
            "src.OpenSSL.crypto.Revoked.set_reason",
            "src.OpenSSL.crypto.Revoked.get_reason",
            "src.OpenSSL.crypto.Revoked.all_reasons"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_crypto.TestRevoked.test_set_reason_invalid_reason": {
        "False Negatives": [
            "src.OpenSSL.crypto.Revoked.set_reason"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_crypto.TestSignVerify.test_sign_with_large_key": {
        "False Negatives": [
            "src.OpenSSL.crypto.sign"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_crypto.TestX509.test_convert_from_cryptography": {
        "False Negatives": [
            "src.OpenSSL.crypto.X509.from_cryptography"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_crypto.TestX509.test_convert_to_cryptography_key": {
        "False Negatives": [
            "src.OpenSSL.crypto.X509.to_cryptography"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_crypto.TestX509.test_invalid_digest_algorithm": {
        "False Negatives": [
            "src.OpenSSL.crypto.X509.digest"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_crypto.TestX509.test_set_notBefore": {
        "False Negatives": [],
        "False Positives": [],
        "True Positives": [
            "src.OpenSSL.crypto.X509.set_notBefore"
        ]
    },
    "tests.test_crypto.TestX509.test_version": {
        "False Negatives": [
            "src.OpenSSL.crypto.X509.set_version",
            "src.OpenSSL.crypto.X509.get_version"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_crypto.TestX509Name.test_only_string_attributes": {
        "False Negatives": [
            "src.OpenSSL.crypto.X509Name.__setattr__"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_crypto.TestX509Req.test_construction": {
        "False Negatives": [
            "src.OpenSSL.crypto.X509Req.__init__"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_crypto.TestX509Req.test_convert_from_cryptography_unsupported_type": {
        "False Negatives": [
            "src.OpenSSL.crypto.X509Req.from_cryptography"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_crypto.TestX509Req.test_undef_oid": {
        "False Negatives": [
            "src.OpenSSL.crypto.X509Extension.get_short_name"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_crypto.TestX509Store.test_load_locations_fails_when_all_args_are_none": {
        "False Negatives": [
            "src.OpenSSL.crypto.X509Store.load_locations"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_crypto.TestX509StoreContext.test_get_verified_chain_invalid_chain_no_root": {
        "False Negatives": [
            "src.OpenSSL.crypto.X509StoreContext.get_verified_chain"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_crypto.TestX509StoreContext.test_verify_with_ca_file_location": {
        "False Negatives": [
            "src.OpenSSL.crypto.X509Store.load_locations",
            "src.OpenSSL.crypto.X509StoreContext.verify_certificate"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_ssl.TestConnection.test_connect_wrong_args": {
        "False Negatives": [
            "src.OpenSSL.SSL.Connection.connect"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_ssl.TestConnection.test_get_cipher_version": {
        "False Negatives": [],
        "False Positives": [],
        "True Positives": [
            "src.OpenSSL.SSL.Connection.get_cipher_version"
        ]
    },
    "tests.test_ssl.TestConnection.test_get_peer_cert_chain_none": {
        "False Negatives": [
            "src.OpenSSL.SSL.Connection.get_peer_cert_chain"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_ssl.TestConnection.test_set_context": {
        "False Negatives": [],
        "False Positives": [],
        "True Positives": [
            "src.OpenSSL.SSL.Connection.set_context"
        ]
    },
    "tests.test_ssl.TestConnection.test_set_verify_overrides_context": {
        "False Negatives": [
            "src.OpenSSL.SSL.Context.set_verify",
            "src.OpenSSL.SSL.Connection.set_verify"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_ssl.TestContext.test_fallback_path_is_not_file_or_dir": {
        "False Negatives": [
            "src.OpenSSL.SSL.Context._fallback_default_verify_paths"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_ssl.TestContext.test_set_default_verify_paths": {
        "False Negatives": [],
        "False Positives": [],
        "True Positives": [
            "src.OpenSSL.SSL.Context.set_default_verify_paths"
        ]
    },
    "tests.test_ssl.TestContext.test_set_keylog_callback": {
        "False Negatives": [],
        "False Positives": [],
        "True Positives": [
            "src.OpenSSL.SSL.Context.set_keylog_callback"
        ]
    },
    "tests.test_ssl.TestContext.test_set_options": {
        "False Negatives": [],
        "False Positives": [],
        "True Positives": [
            "src.OpenSSL.SSL.Context.set_options"
        ]
    },
    "tests.test_ssl.TestContext.test_set_session_id_unicode": {
        "False Negatives": [
            "src.OpenSSL.SSL.Context.set_session_id"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_ssl.TestContext.test_set_timeout_wrong_args": {
        "False Negatives": [
            "src.OpenSSL.SSL.Context.set_timeout"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_ssl.TestContext.test_set_verify_callback_exception": {
        "False Negatives": [
            "src.OpenSSL.SSL.Context.set_verify"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_ssl.TestContext.test_set_verify_wrong_callable_arg": {
        "False Negatives": [
            "src.OpenSSL.SSL.Context.set_verify"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_ssl.TestContextConnection.test_use_certificate": {
        "False Negatives": [],
        "False Positives": [],
        "True Positives": [
            "src.OpenSSL.SSL.Context.use_certificate",
            "src.OpenSSL.SSL.Connection.use_certificate"
        ]
    },
    "tests.test_ssl.TestDTLS.test_timeout": {
        "False Negatives": [
            "src.OpenSSL.SSL.Connection.DTLSv1_get_timeout",
            "src.OpenSSL.SSL.Connection.DTLSv1_handle_timeout"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_ssl.TestMemoryBIO.test_socket_overrides_memory": {
        "False Negatives": [
            "src.OpenSSL.SSL.Connection.bio_read",
            "src.OpenSSL.SSL.Connection.bio_write",
            "src.OpenSSL.SSL.Connection.bio_shutdown"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_ssl.TestServerNameCallback.test_no_servername": {
        "False Negatives": [
            "src.OpenSSL.SSL.Context.set_tlsext_servername_callback",
            "src.OpenSSL.SSL.Connection.get_servername"
        ],
        "False Positives": [],
        "True Positives": []
    },
    "tests.test_util.TestErrors.test_exception_from_error_queue_nonexistent_reason": {
        "False Negatives": [
            "src.OpenSSL._util.exception_from_error_queue"
        ],
        "False Positives": [],
        "True Positives": []
    }
}